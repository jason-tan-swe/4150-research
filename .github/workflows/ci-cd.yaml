name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # Build Docker images for each service
  build-order-service:
    name: Build Order Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t order-service ./services/order-service

  build-product-service:
    name: Build Product Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t product-service ./services/product-service

  build-user-service:
    name: Build User Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t user-service ./services/user-service

  # Run unit and integration tests for each service
  test-order-service:
    name: Test Order Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: |
          cd ./services/order-service
          pnpm install

      - name: Run Tests
        run: |
          cd ./services/order-service
          pnpm jest --testPathPattern=__tests__

  test-product-service:
    name: Test Product Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: |
          cd ./services/product-service
          pnpm install

      - name: Run Tests
        run: |
          cd ./services/product-service
          pnpm jest --testPathPattern=__tests__

  test-user-service:
    name: Test User Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: |
          cd ./services/user-service
          pnpm install

      - name: Run Tests
        run: |
          cd ./services/user-service
          pnpm jest --testPathPattern=__tests__

  # Run centralized E2E tests
  test-e2e:
    name: Run End-to-End Tests
    runs-on: ubuntu-latest
    needs: [test-order-service, test-product-service, test-user-service]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: |
          pnpm install

      - name: Run E2E Tests
        run: pnpm jest tests/e2e/

  # Deploy services to Kubernetes
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [build-order-service, build-product-service, build-user-service, test-e2e]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy Services
        run: |
          kubectl apply -f k8s/persistent-volumes/user-service-pvc.yml
          kubectl apply -f k8s/persistent-volumes/product-service-pvc.yml
          kubectl apply -f k8s/persistent-volumes/order-service-pvc.yml
          kubectl apply -f k8s/deployments/user-service-deployment.yml
          kubectl apply -f k8s/deployments/product-service-deployment.yml
          kubectl apply -f k8s/deployments/order-service-deployment.yml
          kubectl apply -f k8s/services/user-service-service.yml
          kubectl apply -f k8s/services/product-service-service.yml
          kubectl apply -f k8s/services/order-service-service.yml
          kubectl apply -f k8s/ingress.yml