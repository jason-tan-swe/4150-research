name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - develop

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Build and Push Docker Images
        run: |
          docker build -t user-service ./services/user-service
          docker build -t product-service ./services/product-service
          docker build -t order-service ./services/order-service

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test_type: [unit, integration, e2e]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Run Tests
        run: pnpm jest --testPathPattern=services/tests/${{ matrix.test_type }}

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy Services
        run: |
          kubectl apply -f k8s/persistent-volumes/user-service-pvc.yml
          kubectl apply -f k8s/persistent-volumes/product-service-pvc.yml
          kubectl apply -f k8s/persistent-volumes/order-service-pvc.yml
          kubectl apply -f k8s/deployments/user-service-deployment.yml
          kubectl apply -f k8s/deployments/product-service-deployment.yml
          kubectl apply -f k8s/deployments/order-service-deployment.yml
          kubectl apply -f k8s/services/user-service-service.yml
          kubectl apply -f k8s/services/product-service-service.yml
          kubectl apply -f k8s/services/order-service-service.yml
          kubectl apply -f k8s/ingress.yml
